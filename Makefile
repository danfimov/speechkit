args := $(wordlist 2, 100, $(MAKECMDGOALS))

.DEFAULT:
	@echo "No such command (or you pass two or many targets to ). List of possible commands: make help"

.DEFAULT_GOAL := help

##@ Local development

.PHONY: help
help: ## Show this help
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target> <arg=value>\033[0m\n"} /^[a-zA-Z_-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m  %s\033[0m\n\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

.PHONY: run
run:  ## Run API part with hot reload
	uvicorn speechkit.api.__main__:get_app --factory --workers 1 --host 0.0.0.0 --port 8080 --log-config=docker/json-logging.yaml

.PHONY: run_worker
run_worker:  ##Run worker part
	APP_NAME=worker taskiq worker speechkit.broker:broker speechkit.broker.tasks --workers 1

##@ Database

.PHONY: migrate
migrate:  ## Migrate database
	uv run python3 -m speechkit.infrastructure.database.migrations upgrade head

.PHONY: revision
revision:  ## Create revision with autogenerated code
	uv run python3 -m speechkit.infrastructure.database.migrations revision --autogenerate --message $(args)

##@ Docker

.PHONY: build
build:  ## Build image with arbitrary tag
	docker build --platform linux/amd64 -t registry.tochka-tech.com/svc_speechkit/app:$(args) .

.PHONY: build_local
build_local:  ## Build image with tag local (for local debugging)
	docker build --progress=plain --platform linux/amd64 -t registry.tochka-tech.com/svc_speechkit/app:local .

##@ Code quality

.PHONY: load_test
load_test:  ## Run load tests
	uv run --script tests/load/__main__.py -w 1 -n 10 "tests/load/bullet_small_files"

.PHONY: lint
lint:  ## Run linting
	ruff check .
	mypy speechkit

.PHONY: format
format:  ## Run formatting
	ruff check . --fix --unsafe-fixes
